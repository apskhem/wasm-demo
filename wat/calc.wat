(module
    (memory $mem 1)
    (func $fn-1 (param i32) (param i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.add)
    )
    (func $fibonacci (param $l1 i32) (result i32)
        (if (result i32)
            (i32.le_s
                (local.get $l1)
                (i32.const 1)
            )
            (then
                (local.get $l1)
            )
            (else
                (local.get $l1)
                (i32.const 1)
                (i32.sub)
                (call $fibonacci)
                (local.get $l1)
                (i32.const 2)
                (i32.sub)
                (call $fibonacci)
                (i32.mul)
            )
        )
    )
    (export "add" (func $fn-1))
    (export "fibonacci" (func $fibonacci))
    (export "mem" (memory $mem))
)